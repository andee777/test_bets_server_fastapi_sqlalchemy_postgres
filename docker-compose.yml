services:

  # Google Postgres
  cloudsql-proxy:
    image: gcr.io/cloudsql-docker/gce-proxy:1.19.1
    container_name: cloudsql_proxy
    command: /cloud_sql_proxy -instances=${CLOUD_SQL_INSTANCE}=tcp:0.0.0.0:5432 -credential_file=/secrets/service-account.json
    volumes:
      - ./secrets:/secrets:ro
    ports:
      - "5432:5432"
    networks:
      - fastapi_network

  # FastAPI Service
  fastapi:
    build: .
    container_name: fastapi_app
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - cloudsql-proxy
    networks:
      - fastapi_network
    restart: always

  # Nginx Service (for reverse proxy)
  nginx:
    image: nginx:latest
    ports:
      - "80:80"  # HTTP
      - "443:443"  # HTTPS
    depends_on:
      - fastapi
      - certbot
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt  # SSL certificates
      - ./certbot/www:/var/www/certbot
    networks:
      - fastapi_network
    restart: always

  # Certbot Service (for SSL certificates)
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - fastapi_network
    entrypoint: "/bin/sh -c 'certbot certonly --webroot --webroot-path=/var/www/certbot --email andee847@gmail.com --agree-tos --no-eff-email -d test-bets.karunanidhi.dev && trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


# Network for communication between containers
networks:
  fastapi_network:
    driver: bridge

